import wollok.game.*
import tanque.*
import bloques.*
import enemigos.*
import stages.*

program game {
	
	game.title("Juego Base") 
	game.cellSize(16)
	game.width(30)
	game.height(20)
	game.boardGround("suelo.png")
	
	/* Agregando muros laterales */
	stage0.cargarMapaYPJ()
	
	/* Controles del Tanque */
	keyboard.up().onPressDo {tanque.direccion(arriba)
		tanque.move()
	}
	keyboard.down().onPressDo { tanque.direccion(abajo)
		tanque.move()
	}
	keyboard.left().onPressDo { tanque.direccion(izquierda)
		tanque.move()
	}
	keyboard.right().onPressDo { tanque.direccion(derecha)
		tanque.move()
	}
	
	
	/* Disparo del tanque */
	keyboard.a().onPressDo{(tanque.disparo())}
	//keyboard.s().onPressDo{(tanque.superDisparo())}
		
	/* Tanques enemigos */
	 
	
	const posicionesInicialesDeEnemigos = [game.at(1,18),game.at(14,18),game.at(28,18)]
	

	// Agregador de enemigos random para probar
	var tanqueE
	const tiposDeEnemigos = [{tanqueE = new Enemigo(position = posicionesInicialesDeEnemigos.anyOne())}, 
		{tanqueE = new Enemigo2(position = posicionesInicialesDeEnemigos.anyOne(),direccion = abajo)}, 
		{tanqueE = new Enemigo3(position = posicionesInicialesDeEnemigos.anyOne(),direccion = abajo)},
		{tanqueE = new Enemigo4(position = posicionesInicialesDeEnemigos.anyOne(),direccion = abajo)}
	]
	
	game.onTick(12000, "generarEnemigos", { => 
			tiposDeEnemigos.anyOne().apply()
			game.addVisual(tanqueE)
			tanqueE.activarMovimiento()
			stage0.cargarArbustos()
		})	

	
	
	
	/* Colisiones */
	/*game.whenCollideDo(tanqueE, { elemento => 
		game.removeVisual(tanqueE)
			elemento.remover()
	}) */
	game.start()
}

/* Movimiento del enemigo
 * Pantalla de muerte
 * Test de da√±o de bala y vida de bloques 
 * colisiones todas juntas ?
 * Diferentes clases de enemigos
 * Mayor dificultad de enemigos en niveles
 */